:::NVLOGv0.1.0 ncf 1604604875.096142054 (ncf.py:171) cpu_info: {"num": 96, "name": "Intel(R) Xeon(R) Platinum 8275CL CPU @ 3.00GHz"}
:::NVLOGv0.1.0 ncf 1604604875.098248482 (ncf.py:171) cpu_info: {"num": 96, "name": "Intel(R) Xeon(R) Platinum 8275CL CPU @ 3.00GHz"}
:::NVLOGv0.1.0 ncf 1604604875.101578474 (ncf.py:171) mem_info: {"ram": "1.1T"}
:::NVLOGv0.1.0 ncf 1604604875.103539944 (ncf.py:171) mem_info: {"ram": "1.1T"}
:::NVLOGv0.1.0 ncf 1604604881.355406761 (ncf.py:171) gpu_info: {"driver_version": "450.80.02", "num": 8, "name": ["A100-SXM4-40GB", "A100-SXM4-40GB", "A100-SXM4-40GB", "A100-SXM4-40GB", "A100-SXM4-40GB", "A100-SXM4-40GB", "A100-SXM4-40GB", "A100-SXM4-40GB"], "mem": ["40537 MiB", "40537 MiB", "40537 MiB", "40537 MiB", "40537 MiB", "40537 MiB", "40537 MiB", "40537 MiB"]}
:::NVLOGv0.1.0 ncf 1604604881.356151819 (ncf.py:171) gpu_info: {"driver_version": "450.80.02", "num": 8, "name": ["A100-SXM4-40GB", "A100-SXM4-40GB", "A100-SXM4-40GB", "A100-SXM4-40GB", "A100-SXM4-40GB", "A100-SXM4-40GB", "A100-SXM4-40GB", "A100-SXM4-40GB"], "mem": ["40537 MiB", "40537 MiB", "40537 MiB", "40537 MiB", "40537 MiB", "40537 MiB", "40537 MiB", "40537 MiB"]}
:::NVLOGv0.1.0 ncf 1604604882.666274786 (ncf.py:174) args: {"data": "/data/ncf/cache/ml-20m", "epochs": 2, "batch_size": 15000000, "valid_batch_size": 1048576, "factors": 64, "layers": [256, 256, 128, 64], "negative_samples": 4, "learning_rate": 0.0045, "topk": 10, "seed": 1, "threshold": 1.0, "beta1": 0.25, "beta2": 0.5, "eps": 1e-08, "dropout": 0.5, "checkpoint_dir": "/data/checkpoints/", "load_checkpoint_path": null, "mode": "train", "grads_accumulated": 1, "opt_level": "O2", "local_rank": 0, "distributed": true, "world_size": 2}
Saving results to /data/checkpoints/
:::NVLOGv0.1.0 ncf 1604604882.666868210 (ncf.py:184) preproc_hp_sample_eval_replacement: true
:::NVLOGv0.1.0 ncf 1604604882.667104006 (ncf.py:185) input_hp_sample_train_replacement: true
:::NVLOGv0.1.0 ncf 1604604882.667332172 (ncf.py:186) input_step_eval_neg_gen
:::NVLOGv0.1.0 ncf 1604604885.127323389 (ncf.py:194) run_start
:::NVLOGv0.1.0 ncf 1604604885.457879543 (ncf.py:201) preproc_hp_num_eval: 100
:::NVLOGv0.1.0 ncf 1604604885.459014893 (ncf.py:207) input_size: 19861770
:::NVLOGv0.1.0 ncf 1604604885.508303881 (ncf.py:216) input_batch_size: 15000000
:::NVLOGv0.1.0 ncf 1604604885.508601427 (ncf.py:217) input_order
:::NVLOGv0.1.0 ncf 1604604885.509230137 (/workspace/examples/ncf/neumf.py:54) model_hp_mf_dim: 64
:::NVLOGv0.1.0 ncf 1604604885.817252159 (/workspace/examples/ncf/neumf.py:62) model_hp_mlp_layer_sizes: [256, 256, 128, 64]
Selected optimization level O2:  FP16 training with FP32 batchnorm and FP32 master weights.

Defaults for this optimization level are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : dynamic
Processing user overrides (additional kwargs that are not None)...
After processing overrides, optimization options are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : False
master_weights         : True
loss_scale             : dynamic
DistributedDataParallel(
  (module): NeuMF(
    (mf_user_embed): Embedding(138493, 64)
    (mf_item_embed): Embedding(26744, 64)
    (mlp_user_embed): Embedding(138493, 128)
    (mlp_item_embed): Embedding(26744, 128)
    (mlp): ModuleList(
      (0): Linear(in_features=256, out_features=256, bias=True)
      (1): Linear(in_features=256, out_features=128, bias=True)
      (2): Linear(in_features=128, out_features=64, bias=True)
    )
    (final): Linear(in_features=128, out_features=1, bias=True)
  )
)
31832577 parameters
:::NVLOGv0.1.0 ncf 1604604887.523488760 (ncf.py:246) opt_learning_rate: 0.0045
:::NVLOGv0.1.0 ncf 1604604887.523781538 (ncf.py:247) opt_name: "Adam"
:::NVLOGv0.1.0 ncf 1604604887.524009705 (ncf.py:248) opt_hp_Adam_beta1: 0.25
:::NVLOGv0.1.0 ncf 1604604887.524230719 (ncf.py:249) opt_hp_Adam_beta2: 0.5
:::NVLOGv0.1.0 ncf 1604604887.524451733 (ncf.py:250) opt_hp_Adam_epsilon: 1e-08
:::NVLOGv0.1.0 ncf 1604604887.524665594 (ncf.py:251) model_hp_loss_fn: "binary_cross_entropy"
:::NVLOGv0.1.0 ncf 1604604887.524876356 (ncf.py:279) train_loop
:::NVLOGv0.1.0 ncf 1604604887.525092602 (ncf.py:282) train_epoch_start: 0
:::NVLOGv0.1.0 ncf 1604604887.525308132 (ncf.py:283) input_hp_num_neg: 4
:::NVLOGv0.1.0 ncf 1604604887.525516748 (ncf.py:284) input_step_train_neg_gen
:::NVLOGv0.1.0 ncf 1604604889.669967890 (ncf.py:318) train_throughput: 46319589.97980107
:::NVLOGv0.1.0 ncf 1604604889.670301914 (ncf.py:319) train_epoch_stop: 0
:::NVLOGv0.1.0 ncf 1604604889.670527458 (ncf.py:320) eval_start: 0
ncf.py:146: UserWarning: indexing with dtype torch.uint8 is now deprecated, please use a dtype torch.bool instead. (Triggered internally at  ../aten/src/ATen/native/IndexingUtils.h:25.)
  temp[dup_mask] = -1
ncf.py:153: UserWarning: This overload of nonzero is deprecated:
	nonzero(Tensor input, *, Tensor out)
Consider using one of the following signatures instead:
	nonzero(Tensor input, *, bool as_tuple) (Triggered internally at  ../torch/csrc/utils/python_arg_parser.cpp:882.)
  ndcg = (math.log(2) / (torch.nonzero(ifzero)[:,1].view(-1).to(torch.float)+2).log_()).sum()
:::NVLOGv0.1.0 ncf 1604604889.755500317 (ncf.py:155) eval_size: {"epoch": 0, "value": 13987793}
:::NVLOGv0.1.0 ncf 1604604889.755814314 (ncf.py:156) eval_hp_num_users: 138493
:::NVLOGv0.1.0 ncf 1604604889.756071329 (ncf.py:157) eval_hp_num_neg: 100
/opt/conda/lib/python3.6/site-packages/torch/distributed/distributed_c10d.py:126: UserWarning: torch.distributed.reduce_op is deprecated, please use torch.distributed.ReduceOp instead
  warnings.warn("torch.distributed.reduce_op is deprecated, please use "
Epoch 0: HR@10 = 0.8325, NDCG@10 = 0.4891, train_time = 2.14, val_time = 0.09
:::NVLOGv0.1.0 ncf 1604604889.757236242 (ncf.py:333) eval_accuracy: {"epoch": 0, "value": 0.8324536258150231}
:::NVLOGv0.1.0 ncf 1604604889.757503986 (ncf.py:334) eval_target: 1.0
:::NVLOGv0.1.0 ncf 1604604889.757738590 (ncf.py:335) eval_stop: 0
:::NVLOGv0.1.0 ncf 1604604889.757962942 (ncf.py:340) eval_throughput: 160028629.76812795
New best hr! Saving the model to:  /data/checkpoints/model.pth
:::NVLOGv0.1.0 ncf 1604604890.314946413 (ncf.py:282) train_epoch_start: 1
:::NVLOGv0.1.0 ncf 1604604890.315290213 (ncf.py:283) input_hp_num_neg: 4
:::NVLOGv0.1.0 ncf 1604604890.315513849 (ncf.py:284) input_step_train_neg_gen
:::NVLOGv0.1.0 ncf 1604604891.614698172 (ncf.py:318) train_throughput: 76458116.10629462
:::NVLOGv0.1.0 ncf 1604604891.615004301 (ncf.py:319) train_epoch_stop: 1
:::NVLOGv0.1.0 ncf 1604604891.615254879 (ncf.py:320) eval_start: 1
:::NVLOGv0.1.0 ncf 1604604891.698210716 (ncf.py:155) eval_size: {"epoch": 1, "value": 13987793}
:::NVLOGv0.1.0 ncf 1604604891.698511124 (ncf.py:156) eval_hp_num_users: 138493
:::NVLOGv0.1.0 ncf 1604604891.698763371 (ncf.py:157) eval_hp_num_neg: 100
Epoch 1: HR@10 = 0.8329, NDCG@10 = 0.5282, train_time = 1.30, val_time = 0.08
:::NVLOGv0.1.0 ncf 1604604891.699250698 (ncf.py:333) eval_accuracy: {"epoch": 1, "value": 0.8328940812893071}
:::NVLOGv0.1.0 ncf 1604604891.699494839 (ncf.py:334) eval_target: 1.0
:::NVLOGv0.1.0 ncf 1604604891.699716330 (ncf.py:335) eval_stop: 1
:::NVLOGv0.1.0 ncf 1604604891.699935198 (ncf.py:340) eval_throughput: 165408456.15653017
New best hr! Saving the model to:  /data/checkpoints/model.pth
:::NVLOGv0.1.0 ncf 1604604892.247609854 (ncf.py:356) best_train_throughput: 76458116.10629462
:::NVLOGv0.1.0 ncf 1604604892.247926950 (ncf.py:357) best_eval_throughput: 165408456.15653017
:::NVLOGv0.1.0 ncf 1604604892.248152971 (ncf.py:358) best_accuracy: 0.8328940812893071
:::NVLOGv0.1.0 ncf 1604604892.248372555 (ncf.py:359) time_to_target: 7.121231555938721
:::NVLOGv0.1.0 ncf 1604604892.248589039 (ncf.py:360) time_to_best_model: 7.120285272598267
:::NVLOGv0.1.0 ncf 1604604892.248812437 (ncf.py:362) run_stop: {"success": false}
:::NVLOGv0.1.0 ncf 1604604892.249022484 (ncf.py:363) run_final
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
DONE!
