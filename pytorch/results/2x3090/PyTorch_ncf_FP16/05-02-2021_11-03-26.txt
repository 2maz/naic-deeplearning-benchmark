:::NVLOGv0.1.0 ncf 1612523008.313531876 (ncf.py:171) cpu_info: {"num": 255, "name": "AMD EPYC 7662 64-Core Processor"}
:::NVLOGv0.1.0 ncf 1612523008.314171553 (ncf.py:171) cpu_info: {"num": 255, "name": "AMD EPYC 7662 64-Core Processor"}
:::NVLOGv0.1.0 ncf 1612523008.324669600 (ncf.py:171) mem_info: {"ram": "503G"}
:::NVLOGv0.1.0 ncf 1612523008.325192213 (ncf.py:171) mem_info: {"ram": "503G"}
:::NVLOGv0.1.0 ncf 1612523009.696898222 (ncf.py:171) gpu_info: {"driver_version": "460.39", "num": 8, "name": ["GeForce RTX 3090", "GeForce RTX 3090", "GeForce RTX 3090", "GeForce RTX 3090", "GeForce RTX 3090", "GeForce RTX 3090", "GeForce RTX 3090", "GeForce RTX 3090"], "mem": ["24268 MiB", "24268 MiB", "24268 MiB", "24268 MiB", "24268 MiB", "24268 MiB", "24268 MiB", "24268 MiB"]}
:::NVLOGv0.1.0 ncf 1612523009.698349476 (ncf.py:171) gpu_info: {"driver_version": "460.39", "num": 8, "name": ["GeForce RTX 3090", "GeForce RTX 3090", "GeForce RTX 3090", "GeForce RTX 3090", "GeForce RTX 3090", "GeForce RTX 3090", "GeForce RTX 3090", "GeForce RTX 3090"], "mem": ["24268 MiB", "24268 MiB", "24268 MiB", "24268 MiB", "24268 MiB", "24268 MiB", "24268 MiB", "24268 MiB"]}
:::NVLOGv0.1.0 ncf 1612523011.236208677 (ncf.py:174) args: {"data": "/data/ncf/cache/ml-20m", "epochs": 2, "batch_size": 8478184, "valid_batch_size": 1048576, "factors": 64, "layers": [256, 256, 128, 64], "negative_samples": 4, "learning_rate": 0.0045, "topk": 10, "seed": 1, "threshold": 1.0, "beta1": 0.25, "beta2": 0.5, "eps": 1e-08, "dropout": 0.5, "checkpoint_dir": "/data/checkpoints/", "load_checkpoint_path": null, "mode": "train", "grads_accumulated": 1, "opt_level": "O2", "local_rank": 0, "distributed": true, "world_size": 2}
Saving results to /data/checkpoints/
:::NVLOGv0.1.0 ncf 1612523011.237592220 (ncf.py:184) preproc_hp_sample_eval_replacement: true
:::NVLOGv0.1.0 ncf 1612523011.238213778 (ncf.py:185) input_hp_sample_train_replacement: true
:::NVLOGv0.1.0 ncf 1612523011.238805532 (ncf.py:186) input_step_eval_neg_gen
:::NVLOGv0.1.0 ncf 1612523012.738240719 (ncf.py:194) run_start
:::NVLOGv0.1.0 ncf 1612523012.939307451 (ncf.py:201) preproc_hp_num_eval: 100
:::NVLOGv0.1.0 ncf 1612523012.940565586 (ncf.py:207) input_size: 19861770
:::NVLOGv0.1.0 ncf 1612523012.964814425 (ncf.py:216) input_batch_size: 8478184
:::NVLOGv0.1.0 ncf 1612523012.965119839 (ncf.py:217) input_order
:::NVLOGv0.1.0 ncf 1612523012.965870857 (/workspace/examples/ncf/neumf.py:54) model_hp_mf_dim: 64
:::NVLOGv0.1.0 ncf 1612523013.257479906 (/workspace/examples/ncf/neumf.py:62) model_hp_mlp_layer_sizes: [256, 256, 128, 64]
Selected optimization level O2:  FP16 training with FP32 batchnorm and FP32 master weights.

Defaults for this optimization level are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : dynamic
Processing user overrides (additional kwargs that are not None)...
After processing overrides, optimization options are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : False
master_weights         : True
loss_scale             : dynamic
DistributedDataParallel(
  (module): NeuMF(
    (mf_user_embed): Embedding(138493, 64)
    (mf_item_embed): Embedding(26744, 64)
    (mlp_user_embed): Embedding(138493, 128)
    (mlp_item_embed): Embedding(26744, 128)
    (mlp): ModuleList(
      (0): Linear(in_features=256, out_features=256, bias=True)
      (1): Linear(in_features=256, out_features=128, bias=True)
      (2): Linear(in_features=128, out_features=64, bias=True)
    )
    (final): Linear(in_features=128, out_features=1, bias=True)
  )
)
31832577 parameters
:::NVLOGv0.1.0 ncf 1612523014.066455126 (ncf.py:246) opt_learning_rate: 0.0045
:::NVLOGv0.1.0 ncf 1612523014.066813707 (ncf.py:247) opt_name: "Adam"
:::NVLOGv0.1.0 ncf 1612523014.067079067 (ncf.py:248) opt_hp_Adam_beta1: 0.25
:::NVLOGv0.1.0 ncf 1612523014.067342043 (ncf.py:249) opt_hp_Adam_beta2: 0.5
:::NVLOGv0.1.0 ncf 1612523014.067608118 (ncf.py:250) opt_hp_Adam_epsilon: 1e-08
:::NVLOGv0.1.0 ncf 1612523014.067862988 (ncf.py:251) model_hp_loss_fn: "binary_cross_entropy"
:::NVLOGv0.1.0 ncf 1612523014.068118572 (ncf.py:279) train_loop
:::NVLOGv0.1.0 ncf 1612523014.068377018 (ncf.py:282) train_epoch_start: 0
:::NVLOGv0.1.0 ncf 1612523014.068647385 (ncf.py:283) input_hp_num_neg: 4
:::NVLOGv0.1.0 ncf 1612523014.068896770 (ncf.py:284) input_step_train_neg_gen
:::NVLOGv0.1.0 ncf 1612523016.765925646 (ncf.py:318) train_throughput: 36828727.34589206
:::NVLOGv0.1.0 ncf 1612523016.766307592 (ncf.py:319) train_epoch_stop: 0
:::NVLOGv0.1.0 ncf 1612523016.766572475 (ncf.py:320) eval_start: 0
ncf.py:146: UserWarning: indexing with dtype torch.uint8 is now deprecated, please use a dtype torch.bool instead. (Triggered internally at  ../aten/src/ATen/native/IndexingUtils.h:25.)
  temp[dup_mask] = -1
ncf.py:153: UserWarning: This overload of nonzero is deprecated:
	nonzero(Tensor input, *, Tensor out)
Consider using one of the following signatures instead:
	nonzero(Tensor input, *, bool as_tuple) (Triggered internally at  ../torch/csrc/utils/python_arg_parser.cpp:882.)
  ndcg = (math.log(2) / (torch.nonzero(ifzero)[:,1].view(-1).to(torch.float)+2).log_()).sum()
:::NVLOGv0.1.0 ncf 1612523016.880113363 (ncf.py:155) eval_size: {"epoch": 0, "value": 13987793}
:::NVLOGv0.1.0 ncf 1612523016.880429029 (ncf.py:156) eval_hp_num_users: 138493
:::NVLOGv0.1.0 ncf 1612523016.880766392 (ncf.py:157) eval_hp_num_neg: 100
/opt/conda/lib/python3.6/site-packages/torch/distributed/distributed_c10d.py:126: UserWarning: torch.distributed.reduce_op is deprecated, please use torch.distributed.ReduceOp instead
  warnings.warn("torch.distributed.reduce_op is deprecated, please use "
Epoch 0: HR@10 = 0.8323, NDCG@10 = 0.5193, train_time = 2.70, val_time = 0.12
:::NVLOGv0.1.0 ncf 1612523016.881682396 (ncf.py:333) eval_accuracy: {"epoch": 0, "value": 0.8322803318579278}
:::NVLOGv0.1.0 ncf 1612523016.881990433 (ncf.py:334) eval_target: 1.0
:::NVLOGv0.1.0 ncf 1612523016.882254601 (ncf.py:335) eval_stop: 0
:::NVLOGv0.1.0 ncf 1612523016.882515907 (ncf.py:340) eval_throughput: 120610516.80407208
New best hr! Saving the model to:  /data/checkpoints/model.pth
:::NVLOGv0.1.0 ncf 1612523017.222660065 (ncf.py:282) train_epoch_start: 1
:::NVLOGv0.1.0 ncf 1612523017.223347664 (ncf.py:283) input_hp_num_neg: 4
:::NVLOGv0.1.0 ncf 1612523017.224126577 (ncf.py:284) input_step_train_neg_gen
:::NVLOGv0.1.0 ncf 1612523019.400826931 (ncf.py:318) train_throughput: 45632226.03020241
:::NVLOGv0.1.0 ncf 1612523019.401132107 (ncf.py:319) train_epoch_stop: 1
:::NVLOGv0.1.0 ncf 1612523019.401404142 (ncf.py:320) eval_start: 1
:::NVLOGv0.1.0 ncf 1612523019.512471914 (ncf.py:155) eval_size: {"epoch": 1, "value": 13987793}
:::NVLOGv0.1.0 ncf 1612523019.512793303 (ncf.py:156) eval_hp_num_users: 138493
:::NVLOGv0.1.0 ncf 1612523019.513116837 (ncf.py:157) eval_hp_num_neg: 100
Epoch 1: HR@10 = 0.8360, NDCG@10 = 0.5505, train_time = 2.18, val_time = 0.11
:::NVLOGv0.1.0 ncf 1612523019.513657331 (ncf.py:333) eval_accuracy: {"epoch": 1, "value": 0.8359700490277487}
:::NVLOGv0.1.0 ncf 1612523019.513940573 (ncf.py:334) eval_target: 1.0
:::NVLOGv0.1.0 ncf 1612523019.514199972 (ncf.py:335) eval_stop: 1
:::NVLOGv0.1.0 ncf 1612523019.514462948 (ncf.py:340) eval_throughput: 123916073.08583233
New best hr! Saving the model to:  /data/checkpoints/model.pth
:::NVLOGv0.1.0 ncf 1612523019.839318991 (ncf.py:356) best_train_throughput: 45632226.03020241
:::NVLOGv0.1.0 ncf 1612523019.840011597 (ncf.py:357) best_eval_throughput: 123916073.08583233
:::NVLOGv0.1.0 ncf 1612523019.840599537 (ncf.py:358) best_accuracy: 0.8359700490277487
:::NVLOGv0.1.0 ncf 1612523019.841166496 (ncf.py:359) time_to_target: 7.102871894836426
:::NVLOGv0.1.0 ncf 1612523019.841728449 (ncf.py:360) time_to_best_model: 7.1007468700408936
:::NVLOGv0.1.0 ncf 1612523019.842411041 (ncf.py:362) run_stop: {"success": false}
:::NVLOGv0.1.0 ncf 1612523019.842914820 (ncf.py:363) run_final
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
DONE!
