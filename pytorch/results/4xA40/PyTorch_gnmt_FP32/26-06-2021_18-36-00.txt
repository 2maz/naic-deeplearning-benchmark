2: thread affinity: {2, 130, 6, 134, 10, 138, 14, 142, 18, 146, 22, 150, 26, 154, 30, 158, 34, 162, 38, 166, 42, 170, 46, 174, 50, 178, 54, 182, 58, 186, 62, 190}
3: thread affinity: {3, 131, 7, 135, 11, 139, 15, 143, 19, 147, 23, 151, 27, 155, 31, 159, 35, 163, 39, 167, 43, 171, 47, 175, 51, 179, 55, 183, 59, 187, 63, 191}
1: thread affinity: {1, 129, 5, 133, 9, 137, 13, 141, 17, 145, 21, 149, 25, 153, 29, 157, 33, 161, 37, 165, 41, 169, 45, 173, 49, 177, 53, 181, 57, 185, 61, 189}0: thread affinity: {0, 128, 4, 132, 8, 136, 12, 140, 16, 144, 20, 148, 24, 152, 28, 156, 32, 160, 36, 164, 40, 168, 44, 172, 48, 176, 52, 180, 56, 184, 60, 188}

0: Collecting environment information...
3: Collecting environment information...
1: Collecting environment information...
2: Collecting environment information...
0: PyTorch version: 1.9.0a0+df837d0
Is debug build: False
CUDA used to build PyTorch: 11.2
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.1 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Clang version: Could not collect
CMake version: version 3.19.6

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 11.2.142
GPU models and configuration: 
GPU 0: A40
GPU 1: A40
GPU 2: A40
GPU 3: A40
GPU 4: A40
GPU 5: A40
GPU 6: A40
GPU 7: A40

Nvidia driver version: 460.84
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.1.1
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.2
[pip3] nvidia-dlprof-pytorch-nvtx==1.0.0
[pip3] pytorch-quantization==2.1.0
[pip3] pytorch-transformers==1.1.0
[pip3] torch==1.9.0a0+df837d0
[pip3] torchtext==0.9.0a0
[pip3] torchvision==0.9.0a0
[conda] magma-cuda110             2.5.2                         5    local
[conda] mkl                       2019.4                      243  
[conda] mkl-include               2019.4                      243  
[conda] nomkl                     3.0                           0  
[conda] numpy                     1.19.2           py38h6163131_0  
[conda] numpy-base                1.19.2           py38h75fe3a5_0  
[conda] nvidia-dlprof-pytorch-nvtx 1.0.0                    pypi_0    pypi
[conda] pytorch-quantization      2.1.0                    pypi_0    pypi
[conda] pytorch-transformers      1.1.0                    pypi_0    pypi
[conda] torch                     1.9.0a0+df837d0          pypi_0    pypi
[conda] torchtext                 0.9.0a0                  pypi_0    pypi
[conda] torchvision               0.9.0a0                  pypi_0    pypi
0: Saving results to: gnmt
0: Run arguments: Namespace(affinity='socket_unique_interleaved', batching='bucketing', beam_size=5, bpe_codes='/data/gnmt/wmt16_de_en/bpe.32000', cov_penalty_factor=0.1, cuda=True, cudnn=True, dataset_dir='/data/gnmt/wmt16_de_en', decay_factor=0.5, decay_interval=None, decay_steps=4, dllog_file='train_log.json', dropout=0.2, env=True, epochs=2, eval=True, grad_clip=5.0, hidden_size=1024, init_scale=8192, intra_epoch_eval=0, keep_checkpoints=0, lang={'src': 'en', 'tgt': 'de'}, len_norm_const=5.0, len_norm_factor=0.6, local_rank=0, log_all_ranks=True, lr=0.002, math='fp32', num_buckets=5, num_layers=4, optimizer='Adam', optimizer_extra='{}', prealloc_mode='always', print_freq=10, profile=False, rank=0, remain_steps=0.666, resume=None, save_all=False, save_dir='gnmt', save_freq=5000, seed=2, shard_size=80, share_embedding=True, smoothing=0.1, src_lang='en', start_epoch=0, target_bleu=None, target_perf=None, test_batch_size=32, test_loader_workers=0, test_max_length=150, test_min_length=0, test_src='/data/gnmt/wmt16_de_en/newstest2014.tok.bpe.32000.en', test_tgt='/data/gnmt/wmt16_de_en/newstest2014.de', tgt_lang='de', train_batch_size=648, train_global_batch_size=None, train_iter_size=1, train_loader_workers=2, train_max_length=50, train_max_size=None, train_min_length=0, train_src='/data/gnmt/wmt16_de_en/train.tok.clean.bpe.32000.en', train_tgt='/data/gnmt/wmt16_de_en/train.tok.clean.bpe.32000.de', upscale_interval=128, val_batch_size=32, val_loader_workers=0, val_max_length=125, val_min_length=0, val_src='/data/gnmt/wmt16_de_en/newstest_dev.tok.clean.bpe.32000.en', val_tgt='/data/gnmt/wmt16_de_en/newstest_dev.tok.clean.bpe.32000.de', vocab='/data/gnmt/wmt16_de_en/vocab.bpe.32000', warmup=1, warmup_steps=200)
0: Using master seed from command line: 2
3: PyTorch version: 1.9.0a0+df837d0
Is debug build: False
CUDA used to build PyTorch: 11.2
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.1 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Clang version: Could not collect
CMake version: version 3.19.6

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 11.2.142
GPU models and configuration: 
GPU 0: A40
GPU 1: A40
GPU 2: A40
GPU 3: A40
GPU 4: A40
GPU 5: A40
GPU 6: A40
GPU 7: A40

Nvidia driver version: 460.84
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.1.1
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.2
[pip3] nvidia-dlprof-pytorch-nvtx==1.0.0
[pip3] pytorch-quantization==2.1.0
[pip3] pytorch-transformers==1.1.0
[pip3] torch==1.9.0a0+df837d0
[pip3] torchtext==0.9.0a0
[pip3] torchvision==0.9.0a0
[conda] magma-cuda110             2.5.2                         5    local
[conda] mkl                       2019.4                      243  
[conda] mkl-include               2019.4                      243  
[conda] nomkl                     3.0                           0  
[conda] numpy                     1.19.2           py38h6163131_0  
[conda] numpy-base                1.19.2           py38h75fe3a5_0  
[conda] nvidia-dlprof-pytorch-nvtx 1.0.0                    pypi_0    pypi
[conda] pytorch-quantization      2.1.0                    pypi_0    pypi
[conda] pytorch-transformers      1.1.0                    pypi_0    pypi
[conda] torch                     1.9.0a0+df837d0          pypi_0    pypi
[conda] torchtext                 0.9.0a0                  pypi_0    pypi
[conda] torchvision               0.9.0a0                  pypi_0    pypi
3: Saving results to: gnmt
3: Run arguments: Namespace(affinity='socket_unique_interleaved', batching='bucketing', beam_size=5, bpe_codes='/data/gnmt/wmt16_de_en/bpe.32000', cov_penalty_factor=0.1, cuda=True, cudnn=True, dataset_dir='/data/gnmt/wmt16_de_en', decay_factor=0.5, decay_interval=None, decay_steps=4, dllog_file='train_log.json', dropout=0.2, env=True, epochs=2, eval=True, grad_clip=5.0, hidden_size=1024, init_scale=8192, intra_epoch_eval=0, keep_checkpoints=0, lang={'src': 'en', 'tgt': 'de'}, len_norm_const=5.0, len_norm_factor=0.6, local_rank=3, log_all_ranks=True, lr=0.002, math='fp32', num_buckets=5, num_layers=4, optimizer='Adam', optimizer_extra='{}', prealloc_mode='always', print_freq=10, profile=False, rank=3, remain_steps=0.666, resume=None, save_all=False, save_dir='gnmt', save_freq=5000, seed=2, shard_size=80, share_embedding=True, smoothing=0.1, src_lang='en', start_epoch=0, target_bleu=None, target_perf=None, test_batch_size=32, test_loader_workers=0, test_max_length=150, test_min_length=0, test_src='/data/gnmt/wmt16_de_en/newstest2014.tok.bpe.32000.en', test_tgt='/data/gnmt/wmt16_de_en/newstest2014.de', tgt_lang='de', train_batch_size=648, train_global_batch_size=None, train_iter_size=1, train_loader_workers=2, train_max_length=50, train_max_size=None, train_min_length=0, train_src='/data/gnmt/wmt16_de_en/train.tok.clean.bpe.32000.en', train_tgt='/data/gnmt/wmt16_de_en/train.tok.clean.bpe.32000.de', upscale_interval=128, val_batch_size=32, val_loader_workers=0, val_max_length=125, val_min_length=0, val_src='/data/gnmt/wmt16_de_en/newstest_dev.tok.clean.bpe.32000.en', val_tgt='/data/gnmt/wmt16_de_en/newstest_dev.tok.clean.bpe.32000.de', vocab='/data/gnmt/wmt16_de_en/vocab.bpe.32000', warmup=1, warmup_steps=200)
3: Using master seed from command line: 2
2: PyTorch version: 1.9.0a0+df837d0
Is debug build: False
CUDA used to build PyTorch: 11.2
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.1 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Clang version: Could not collect
CMake version: version 3.19.6

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 11.2.142
GPU models and configuration: 
GPU 0: A40
GPU 1: A40
GPU 2: A40
GPU 3: A40
GPU 4: A40
GPU 5: A40
GPU 6: A40
GPU 7: A40

Nvidia driver version: 460.84
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.1.1
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.2
[pip3] nvidia-dlprof-pytorch-nvtx==1.0.0
[pip3] pytorch-quantization==2.1.0
[pip3] pytorch-transformers==1.1.0
[pip3] torch==1.9.0a0+df837d0
[pip3] torchtext==0.9.0a0
[pip3] torchvision==0.9.0a0
[conda] magma-cuda110             2.5.2                         5    local
[conda] mkl                       2019.4                      243  
[conda] mkl-include               2019.4                      243  
[conda] nomkl                     3.0                           0  
[conda] numpy                     1.19.2           py38h6163131_0  
[conda] numpy-base                1.19.2           py38h75fe3a5_0  
[conda] nvidia-dlprof-pytorch-nvtx 1.0.0                    pypi_0    pypi
[conda] pytorch-quantization      2.1.0                    pypi_0    pypi
[conda] pytorch-transformers      1.1.0                    pypi_0    pypi
[conda] torch                     1.9.0a0+df837d0          pypi_0    pypi
[conda] torchtext                 0.9.0a0                  pypi_0    pypi
[conda] torchvision               0.9.0a0                  pypi_0    pypi
2: Saving results to: gnmt
2: Run arguments: Namespace(affinity='socket_unique_interleaved', batching='bucketing', beam_size=5, bpe_codes='/data/gnmt/wmt16_de_en/bpe.32000', cov_penalty_factor=0.1, cuda=True, cudnn=True, dataset_dir='/data/gnmt/wmt16_de_en', decay_factor=0.5, decay_interval=None, decay_steps=4, dllog_file='train_log.json', dropout=0.2, env=True, epochs=2, eval=True, grad_clip=5.0, hidden_size=1024, init_scale=8192, intra_epoch_eval=0, keep_checkpoints=0, lang={'src': 'en', 'tgt': 'de'}, len_norm_const=5.0, len_norm_factor=0.6, local_rank=2, log_all_ranks=True, lr=0.002, math='fp32', num_buckets=5, num_layers=4, optimizer='Adam', optimizer_extra='{}', prealloc_mode='always', print_freq=10, profile=False, rank=2, remain_steps=0.666, resume=None, save_all=False, save_dir='gnmt', save_freq=5000, seed=2, shard_size=80, share_embedding=True, smoothing=0.1, src_lang='en', start_epoch=0, target_bleu=None, target_perf=None, test_batch_size=32, test_loader_workers=0, test_max_length=150, test_min_length=0, test_src='/data/gnmt/wmt16_de_en/newstest2014.tok.bpe.32000.en', test_tgt='/data/gnmt/wmt16_de_en/newstest2014.de', tgt_lang='de', train_batch_size=648, train_global_batch_size=None, train_iter_size=1, train_loader_workers=2, train_max_length=50, train_max_size=None, train_min_length=0, train_src='/data/gnmt/wmt16_de_en/train.tok.clean.bpe.32000.en', train_tgt='/data/gnmt/wmt16_de_en/train.tok.clean.bpe.32000.de', upscale_interval=128, val_batch_size=32, val_loader_workers=0, val_max_length=125, val_min_length=0, val_src='/data/gnmt/wmt16_de_en/newstest_dev.tok.clean.bpe.32000.en', val_tgt='/data/gnmt/wmt16_de_en/newstest_dev.tok.clean.bpe.32000.de', vocab='/data/gnmt/wmt16_de_en/vocab.bpe.32000', warmup=1, warmup_steps=200)
2: Using master seed from command line: 2
1: PyTorch version: 1.9.0a0+df837d0
Is debug build: False
CUDA used to build PyTorch: 11.2
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.1 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Clang version: Could not collect
CMake version: version 3.19.6

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 11.2.142
GPU models and configuration: 
GPU 0: A40
GPU 1: A40
GPU 2: A40
GPU 3: A40
GPU 4: A40
GPU 5: A40
GPU 6: A40
GPU 7: A40

Nvidia driver version: 460.84
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.1.1
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.2
[pip3] nvidia-dlprof-pytorch-nvtx==1.0.0
[pip3] pytorch-quantization==2.1.0
[pip3] pytorch-transformers==1.1.0
[pip3] torch==1.9.0a0+df837d0
[pip3] torchtext==0.9.0a0
[pip3] torchvision==0.9.0a0
[conda] magma-cuda110             2.5.2                         5    local
[conda] mkl                       2019.4                      243  
[conda] mkl-include               2019.4                      243  
[conda] nomkl                     3.0                           0  
[conda] numpy                     1.19.2           py38h6163131_0  
[conda] numpy-base                1.19.2           py38h75fe3a5_0  
[conda] nvidia-dlprof-pytorch-nvtx 1.0.0                    pypi_0    pypi
[conda] pytorch-quantization      2.1.0                    pypi_0    pypi
[conda] pytorch-transformers      1.1.0                    pypi_0    pypi
[conda] torch                     1.9.0a0+df837d0          pypi_0    pypi
[conda] torchtext                 0.9.0a0                  pypi_0    pypi
[conda] torchvision               0.9.0a0                  pypi_0    pypi
1: Saving results to: gnmt
1: Run arguments: Namespace(affinity='socket_unique_interleaved', batching='bucketing', beam_size=5, bpe_codes='/data/gnmt/wmt16_de_en/bpe.32000', cov_penalty_factor=0.1, cuda=True, cudnn=True, dataset_dir='/data/gnmt/wmt16_de_en', decay_factor=0.5, decay_interval=None, decay_steps=4, dllog_file='train_log.json', dropout=0.2, env=True, epochs=2, eval=True, grad_clip=5.0, hidden_size=1024, init_scale=8192, intra_epoch_eval=0, keep_checkpoints=0, lang={'src': 'en', 'tgt': 'de'}, len_norm_const=5.0, len_norm_factor=0.6, local_rank=1, log_all_ranks=True, lr=0.002, math='fp32', num_buckets=5, num_layers=4, optimizer='Adam', optimizer_extra='{}', prealloc_mode='always', print_freq=10, profile=False, rank=1, remain_steps=0.666, resume=None, save_all=False, save_dir='gnmt', save_freq=5000, seed=2, shard_size=80, share_embedding=True, smoothing=0.1, src_lang='en', start_epoch=0, target_bleu=None, target_perf=None, test_batch_size=32, test_loader_workers=0, test_max_length=150, test_min_length=0, test_src='/data/gnmt/wmt16_de_en/newstest2014.tok.bpe.32000.en', test_tgt='/data/gnmt/wmt16_de_en/newstest2014.de', tgt_lang='de', train_batch_size=648, train_global_batch_size=None, train_iter_size=1, train_loader_workers=2, train_max_length=50, train_max_size=None, train_min_length=0, train_src='/data/gnmt/wmt16_de_en/train.tok.clean.bpe.32000.en', train_tgt='/data/gnmt/wmt16_de_en/train.tok.clean.bpe.32000.de', upscale_interval=128, val_batch_size=32, val_loader_workers=0, val_max_length=125, val_min_length=0, val_src='/data/gnmt/wmt16_de_en/newstest_dev.tok.clean.bpe.32000.en', val_tgt='/data/gnmt/wmt16_de_en/newstest_dev.tok.clean.bpe.32000.de', vocab='/data/gnmt/wmt16_de_en/vocab.bpe.32000', warmup=1, warmup_steps=200)
1: Using master seed from command line: 2
0: Worker 0 is using worker seed: 242886303
2: Worker 2 is using worker seed: 3588440356
3: Worker 3 is using worker seed: 1323436024
1: Worker 1 is using worker seed: 364522461
3: Building vocabulary from /data/gnmt/wmt16_de_en/vocab.bpe.32000
3: Size of vocabulary: 31794
0: Building vocabulary from /data/gnmt/wmt16_de_en/vocab.bpe.32000
1: Building vocabulary from /data/gnmt/wmt16_de_en/vocab.bpe.32000
2: Building vocabulary from /data/gnmt/wmt16_de_en/vocab.bpe.32000
0: Size of vocabulary: 31794
1: Size of vocabulary: 31794
2: Size of vocabulary: 31794
3: Processing data from /data/gnmt/wmt16_de_en/train.tok.clean.bpe.32000.en
0: Processing data from /data/gnmt/wmt16_de_en/train.tok.clean.bpe.32000.en
1: Processing data from /data/gnmt/wmt16_de_en/train.tok.clean.bpe.32000.en
2: Processing data from /data/gnmt/wmt16_de_en/train.tok.clean.bpe.32000.en
3: Processing data from /data/gnmt/wmt16_de_en/train.tok.clean.bpe.32000.de
0: Processing data from /data/gnmt/wmt16_de_en/train.tok.clean.bpe.32000.de
1: Processing data from /data/gnmt/wmt16_de_en/train.tok.clean.bpe.32000.de
2: Processing data from /data/gnmt/wmt16_de_en/train.tok.clean.bpe.32000.de
3: Filtering data, min len: 0, max len: 50
0: Filtering data, min len: 0, max len: 50
1: Filtering data, min len: 0, max len: 50
2: Filtering data, min len: 0, max len: 50
3: Pairs before: 160078, after: 148120
1: Pairs before: 160078, after: 148120
0: Pairs before: 160078, after: 148120
2: Pairs before: 160078, after: 148120
3: Processing data from /data/gnmt/wmt16_de_en/newstest_dev.tok.clean.bpe.32000.en
1: Processing data from /data/gnmt/wmt16_de_en/newstest_dev.tok.clean.bpe.32000.en
0: Processing data from /data/gnmt/wmt16_de_en/newstest_dev.tok.clean.bpe.32000.en
2: Processing data from /data/gnmt/wmt16_de_en/newstest_dev.tok.clean.bpe.32000.en
3: Processing data from /data/gnmt/wmt16_de_en/newstest_dev.tok.clean.bpe.32000.de
1: Processing data from /data/gnmt/wmt16_de_en/newstest_dev.tok.clean.bpe.32000.de
0: Processing data from /data/gnmt/wmt16_de_en/newstest_dev.tok.clean.bpe.32000.de
2: Processing data from /data/gnmt/wmt16_de_en/newstest_dev.tok.clean.bpe.32000.de
3: Filtering data, min len: 0, max len: 125
0: Filtering data, min len: 0, max len: 125
1: Filtering data, min len: 0, max len: 125
3: Pairs before: 5100, after: 5100
2: Filtering data, min len: 0, max len: 125
0: Pairs before: 5100, after: 5100
1: Pairs before: 5100, after: 5100
2: Pairs before: 5100, after: 5100
0: Processing data from /data/gnmt/wmt16_de_en/newstest2014.tok.bpe.32000.en
2: Processing data from /data/gnmt/wmt16_de_en/newstest2014.tok.bpe.32000.en
1: Processing data from /data/gnmt/wmt16_de_en/newstest2014.tok.bpe.32000.en
3: Processing data from /data/gnmt/wmt16_de_en/newstest2014.tok.bpe.32000.en
0: Filtering data, min len: 0, max len: 150
0: Pairs before: 3003, after: 3003
2: Filtering data, min len: 0, max len: 150
2: Pairs before: 3003, after: 3003
1: Filtering data, min len: 0, max len: 150
1: Pairs before: 3003, after: 3003
3: Filtering data, min len: 0, max len: 150
3: Pairs before: 3003, after: 3003
0: GNMT(
  (encoder): ResidualRecurrentEncoder(
    (rnn_layers): ModuleList(
      (0): LSTM(1024, 1024, bidirectional=True)
      (1): LSTM(2048, 1024)
      (2): LSTM(1024, 1024)
      (3): LSTM(1024, 1024)
    )
    (dropout): Dropout(p=0.2, inplace=False)
    (embedder): Embedding(31794, 1024, padding_idx=0)
  )
  (decoder): ResidualRecurrentDecoder(
    (att_rnn): RecurrentAttention(
      (rnn): LSTM(1024, 1024)
      (attn): BahdanauAttention(
        (linear_q): Linear(in_features=1024, out_features=1024, bias=False)
        (linear_k): Linear(in_features=1024, out_features=1024, bias=False)
      )
      (dropout): Dropout(p=0.2, inplace=False)
    )
    (rnn_layers): ModuleList(
      (0): LSTM(2048, 1024)
      (1): LSTM(2048, 1024)
      (2): LSTM(2048, 1024)
    )
    (embedder): Embedding(31794, 1024, padding_idx=0)
    (classifier): Classifier(
      (classifier): Linear(in_features=1024, out_features=31794, bias=True)
    )
    (dropout): Dropout(p=0.2, inplace=False)
  )
)
0: Building LabelSmoothingLoss (smoothing: 0.1)
0: Training optimizer config: {'optimizer': 'Adam', 'lr': 0.002}
0: Training LR schedule config: {'warmup_steps': 200, 'remain_steps': 0.666, 'decay_interval': None, 'decay_steps': 4, 'decay_factor': 0.5}
0: Number of parameters: 159593523
/opt/conda/lib/python3.8/site-packages/torch/tensor.py:559: UserWarning: floor_divide is deprecated, and will be removed in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values.
To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor'). (Triggered internally at  ../aten/src/ATen/native/BinaryOps.cpp:335.)
  return torch.floor_divide(self, other)
0: Saving state of the tokenizer
0: Initializing fp32 optimizer
0: Using optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.002
    weight_decay: 0
)
0: Scheduler warmup steps: 200
0: Scheduler remain steps: 71
0: Scheduler decay interval: 9
0: Scheduler decay factor: 0.5
0: Scheduler max decay steps: 4
0: warmup_steps should not be larger than remain_steps, setting warmup_steps=remain_steps
0: Starting epoch 0
0: Executing preallocation
2: GNMT(
  (encoder): ResidualRecurrentEncoder(
    (rnn_layers): ModuleList(
      (0): LSTM(1024, 1024, bidirectional=True)
      (1): LSTM(2048, 1024)
      (2): LSTM(1024, 1024)
      (3): LSTM(1024, 1024)
    )
    (dropout): Dropout(p=0.2, inplace=False)
    (embedder): Embedding(31794, 1024, padding_idx=0)
  )
  (decoder): ResidualRecurrentDecoder(
    (att_rnn): RecurrentAttention(
      (rnn): LSTM(1024, 1024)
      (attn): BahdanauAttention(
        (linear_q): Linear(in_features=1024, out_features=1024, bias=False)
        (linear_k): Linear(in_features=1024, out_features=1024, bias=False)
      )
      (dropout): Dropout(p=0.2, inplace=False)
    )
    (rnn_layers): ModuleList(
      (0): LSTM(2048, 1024)
      (1): LSTM(2048, 1024)
      (2): LSTM(2048, 1024)
    )
    (embedder): Embedding(31794, 1024, padding_idx=0)
    (classifier): Classifier(
      (classifier): Linear(in_features=1024, out_features=31794, bias=True)
    )
    (dropout): Dropout(p=0.2, inplace=False)
  )
)
2: Building LabelSmoothingLoss (smoothing: 0.1)
2: Training optimizer config: {'optimizer': 'Adam', 'lr': 0.002}
2: Training LR schedule config: {'warmup_steps': 200, 'remain_steps': 0.666, 'decay_interval': None, 'decay_steps': 4, 'decay_factor': 0.5}
2: Number of parameters: 159593523
/opt/conda/lib/python3.8/site-packages/torch/tensor.py:559: UserWarning: floor_divide is deprecated, and will be removed in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values.
To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor'). (Triggered internally at  ../aten/src/ATen/native/BinaryOps.cpp:335.)
  return torch.floor_divide(self, other)
1: GNMT(
  (encoder): ResidualRecurrentEncoder(
    (rnn_layers): ModuleList(
      (0): LSTM(1024, 1024, bidirectional=True)
      (1): LSTM(2048, 1024)
      (2): LSTM(1024, 1024)
      (3): LSTM(1024, 1024)
    )
    (dropout): Dropout(p=0.2, inplace=False)
    (embedder): Embedding(31794, 1024, padding_idx=0)
  )
  (decoder): ResidualRecurrentDecoder(
    (att_rnn): RecurrentAttention(
      (rnn): LSTM(1024, 1024)
      (attn): BahdanauAttention(
        (linear_q): Linear(in_features=1024, out_features=1024, bias=False)
        (linear_k): Linear(in_features=1024, out_features=1024, bias=False)
      )
      (dropout): Dropout(p=0.2, inplace=False)
    )
    (rnn_layers): ModuleList(
      (0): LSTM(2048, 1024)
      (1): LSTM(2048, 1024)
      (2): LSTM(2048, 1024)
    )
    (embedder): Embedding(31794, 1024, padding_idx=0)
    (classifier): Classifier(
      (classifier): Linear(in_features=1024, out_features=31794, bias=True)
    )
    (dropout): Dropout(p=0.2, inplace=False)
  )
)
1: Building LabelSmoothingLoss (smoothing: 0.1)
1: Training optimizer config: {'optimizer': 'Adam', 'lr': 0.002}
1: Training LR schedule config: {'warmup_steps': 200, 'remain_steps': 0.666, 'decay_interval': None, 'decay_steps': 4, 'decay_factor': 0.5}
1: Number of parameters: 159593523
3: GNMT(
  (encoder): ResidualRecurrentEncoder(
    (rnn_layers): ModuleList(
      (0): LSTM(1024, 1024, bidirectional=True)
      (1): LSTM(2048, 1024)
      (2): LSTM(1024, 1024)
      (3): LSTM(1024, 1024)
    )
    (dropout): Dropout(p=0.2, inplace=False)
    (embedder): Embedding(31794, 1024, padding_idx=0)
  )
  (decoder): ResidualRecurrentDecoder(
    (att_rnn): RecurrentAttention(
      (rnn): LSTM(1024, 1024)
      (attn): BahdanauAttention(
        (linear_q): Linear(in_features=1024, out_features=1024, bias=False)
        (linear_k): Linear(in_features=1024, out_features=1024, bias=False)
      )
      (dropout): Dropout(p=0.2, inplace=False)
    )
    (rnn_layers): ModuleList(
      (0): LSTM(2048, 1024)
      (1): LSTM(2048, 1024)
      (2): LSTM(2048, 1024)
    )
    (embedder): Embedding(31794, 1024, padding_idx=0)
    (classifier): Classifier(
      (classifier): Linear(in_features=1024, out_features=31794, bias=True)
    )
    (dropout): Dropout(p=0.2, inplace=False)
  )
)
3: Building LabelSmoothingLoss (smoothing: 0.1)
3: Training optimizer config: {'optimizer': 'Adam', 'lr': 0.002}
3: Training LR schedule config: {'warmup_steps': 200, 'remain_steps': 0.666, 'decay_interval': None, 'decay_steps': 4, 'decay_factor': 0.5}
3: Number of parameters: 159593523
/opt/conda/lib/python3.8/site-packages/torch/tensor.py:559: UserWarning: floor_divide is deprecated, and will be removed in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values.
To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor'). (Triggered internally at  ../aten/src/ATen/native/BinaryOps.cpp:335.)
  return torch.floor_divide(self, other)
/opt/conda/lib/python3.8/site-packages/torch/tensor.py:559: UserWarning: floor_divide is deprecated, and will be removed in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values.
To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor'). (Triggered internally at  ../aten/src/ATen/native/BinaryOps.cpp:335.)
  return torch.floor_divide(self, other)
2: Saving state of the tokenizer
2: Initializing fp32 optimizer
2: Using optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.002
    weight_decay: 0
)
2: Scheduler warmup steps: 200
2: Scheduler remain steps: 71
2: Scheduler decay interval: 9
2: Scheduler decay factor: 0.5
2: Scheduler max decay steps: 4
2: warmup_steps should not be larger than remain_steps, setting warmup_steps=remain_steps
1: Saving state of the tokenizer
1: Initializing fp32 optimizer
1: Using optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.002
    weight_decay: 0
)
1: Scheduler warmup steps: 200
1: Scheduler remain steps: 71
1: Scheduler decay interval: 9
1: Scheduler decay factor: 0.5
1: Scheduler max decay steps: 4
1: warmup_steps should not be larger than remain_steps, setting warmup_steps=remain_steps
2: Starting epoch 0
2: Executing preallocation
3: Saving state of the tokenizer
3: Initializing fp32 optimizer
3: Using optimizer: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.002
    weight_decay: 0
)
3: Scheduler warmup steps: 200
3: Scheduler remain steps: 71
3: Scheduler decay interval: 9
3: Scheduler decay factor: 0.5
3: Scheduler max decay steps: 4
3: warmup_steps should not be larger than remain_steps, setting warmup_steps=remain_steps
1: Starting epoch 0
1: Executing preallocation
3: Starting epoch 0
3: Executing preallocation
3: Sampler for epoch 0 uses seed 2602510382
2: Sampler for epoch 0 uses seed 2602510382
0: Sampler for epoch 0 uses seed 2602510382
1: Sampler for epoch 0 uses seed 2602510382
/opt/conda/lib/python3.8/site-packages/torch/optim/lr_scheduler.py:129: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn("Detected call of `lr_scheduler.step()` before `optimizer.step()`. "
/opt/conda/lib/python3.8/site-packages/torch/optim/lr_scheduler.py:129: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn("Detected call of `lr_scheduler.step()` before `optimizer.step()`. "
/opt/conda/lib/python3.8/site-packages/torch/optim/lr_scheduler.py:129: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn("Detected call of `lr_scheduler.step()` before `optimizer.step()`. "
/opt/conda/lib/python3.8/site-packages/torch/optim/lr_scheduler.py:129: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn("Detected call of `lr_scheduler.step()` before `optimizer.step()`. "
2: TRAIN [0][0/54]	Time 1.995 (0.000)	Data 6.04e-01 (0.00e+00)	Tok/s 8797 (0)	Loss/tok 10.6071 (10.6071)	LR 2.134e-05
1: TRAIN [0][0/54]	Time 1.995 (0.000)	Data 6.93e-01 (0.00e+00)	Tok/s 8770 (0)	Loss/tok 10.5963 (10.5963)	LR 2.134e-05
3: TRAIN [0][0/54]	Time 1.995 (0.000)	Data 6.29e-01 (0.00e+00)	Tok/s 8897 (0)	Loss/tok 10.6137 (10.6137)	LR 2.134e-05
0: TRAIN [0][0/54]	Time 1.995 (0.000)	Data 6.37e-01 (0.00e+00)	Tok/s 8905 (0)	Loss/tok 10.6050 (10.6050)	LR 2.134e-05
2: TRAIN [0][10/54]	Time 0.519 (0.963)	Data 2.41e-04 (2.31e-04)	Tok/s 33892 (32831)	Loss/tok 9.2943 (10.0237)	LR 4.082e-05
3: TRAIN [0][10/54]	Time 0.519 (0.963)	Data 2.47e-04 (2.38e-04)	Tok/s 33770 (32824)	Loss/tok 9.3090 (10.0262)	LR 4.082e-05
0: TRAIN [0][10/54]	Time 0.519 (0.963)	Data 2.62e-04 (2.43e-04)	Tok/s 33963 (32795)	Loss/tok 9.2999 (10.0295)	LR 4.082e-05
1: TRAIN [0][10/54]	Time 0.520 (0.963)	Data 2.51e-04 (2.62e-04)	Tok/s 33753 (32859)	Loss/tok 9.3056 (10.0239)	LR 4.082e-05
1: TRAIN [0][20/54]	Time 0.516 (0.906)	Data 2.59e-04 (2.51e-04)	Tok/s 33998 (34085)	Loss/tok 8.7857 (9.6222)	LR 7.809e-05
2: TRAIN [0][20/54]	Time 0.516 (0.906)	Data 2.52e-04 (2.37e-04)	Tok/s 34264 (34103)	Loss/tok 8.7698 (9.6127)	LR 7.809e-05
0: TRAIN [0][20/54]	Time 0.516 (0.906)	Data 2.50e-04 (2.46e-04)	Tok/s 34499 (34151)	Loss/tok 8.7475 (9.6167)	LR 7.809e-05
3: TRAIN [0][20/54]	Time 0.516 (0.906)	Data 2.72e-04 (2.49e-04)	Tok/s 34316 (34146)	Loss/tok 8.7807 (9.6187)	LR 7.809e-05
2: TRAIN [0][30/54]	Time 1.451 (0.930)	Data 2.25e-04 (2.36e-04)	Tok/s 36618 (34662)	Loss/tok 8.5723 (9.2707)	LR 1.494e-04
0: TRAIN [0][30/54]	Time 1.451 (0.930)	Data 2.29e-04 (2.52e-04)	Tok/s 36399 (34659)	Loss/tok 8.5881 (9.2759)	LR 1.494e-04
1: TRAIN [0][30/54]	Time 1.451 (0.930)	Data 2.46e-04 (2.46e-04)	Tok/s 36590 (34658)	Loss/tok 8.5643 (9.2783)	LR 1.494e-04
3: TRAIN [0][30/54]	Time 1.451 (0.930)	Data 2.53e-04 (2.54e-04)	Tok/s 36463 (34670)	Loss/tok 8.6072 (9.2794)	LR 1.494e-04
3: TRAIN [0][40/54]	Time 0.523 (0.891)	Data 2.42e-04 (2.53e-04)	Tok/s 33455 (34759)	Loss/tok 8.0306 (9.0742)	LR 2.857e-04
1: TRAIN [0][40/54]	Time 0.523 (0.891)	Data 2.23e-04 (2.48e-04)	Tok/s 33654 (34733)	Loss/tok 8.0010 (9.0753)	LR 2.857e-04
2: TRAIN [0][40/54]	Time 0.523 (0.891)	Data 2.29e-04 (2.35e-04)	Tok/s 33360 (34732)	Loss/tok 7.9986 (9.0687)	LR 2.857e-04
0: TRAIN [0][40/54]	Time 0.523 (0.891)	Data 2.23e-04 (2.51e-04)	Tok/s 33415 (34727)	Loss/tok 8.0531 (9.0729)	LR 2.857e-04
1: TRAIN [0][50/54]	Time 1.444 (0.914)	Data 5.67e-04 (2.54e-04)	Tok/s 36656 (34949)	Loss/tok 8.7548 (8.8498)	LR 5.466e-04
0: TRAIN [0][50/54]	Time 1.444 (0.914)	Data 6.14e-04 (2.59e-04)	Tok/s 36812 (34957)	Loss/tok 8.7430 (8.8486)	LR 5.466e-04
2: TRAIN [0][50/54]	Time 1.444 (0.914)	Data 6.23e-04 (2.45e-04)	Tok/s 36551 (34973)	Loss/tok 8.7340 (8.8436)	LR 5.466e-04
3: TRAIN [0][50/54]	Time 1.444 (0.914)	Data 6.28e-04 (2.61e-04)	Tok/s 36581 (34976)	Loss/tok 8.7373 (8.8486)	LR 5.466e-04
0: Running validation on dev set
3: Running validation on dev set
1: Running validation on dev set
2: Running validation on dev set
0: Executing preallocation
3: Executing preallocation
1: Executing preallocation
2: Executing preallocation
3: VALIDATION [0][0/40]	Time 0.061 (0.000)	Data 1.23e-03 (0.00e+00)	Tok/s 68221 (0)	Loss/tok 8.5438 (8.5438)
2: VALIDATION [0][0/40]	Time 0.068 (0.000)	Data 1.08e-03 (0.00e+00)	Tok/s 64787 (0)	Loss/tok 8.5445 (8.5445)
1: VALIDATION [0][0/40]	Time 0.074 (0.000)	Data 1.25e-03 (0.00e+00)	Tok/s 63978 (0)	Loss/tok 8.5823 (8.5823)
0: VALIDATION [0][0/40]	Time 0.106 (0.000)	Data 9.88e-04 (0.00e+00)	Tok/s 54016 (0)	Loss/tok 8.5461 (8.5461)
3: VALIDATION [0][10/40]	Time 0.030 (0.039)	Data 7.35e-04 (7.63e-04)	Tok/s 75952 (72550)	Loss/tok 8.4213 (8.4938)
2: VALIDATION [0][10/40]	Time 0.030 (0.041)	Data 7.17e-04 (7.70e-04)	Tok/s 76400 (71515)	Loss/tok 8.4675 (8.4489)
1: VALIDATION [0][10/40]	Time 0.030 (0.041)	Data 7.55e-04 (7.94e-04)	Tok/s 77222 (72372)	Loss/tok 8.3762 (8.4859)
0: VALIDATION [0][10/40]	Time 0.030 (0.042)	Data 7.32e-04 (7.70e-04)	Tok/s 76721 (72350)	Loss/tok 8.3657 (8.4759)
3: VALIDATION [0][20/40]	Time 0.027 (0.033)	Data 7.11e-04 (7.48e-04)	Tok/s 58387 (72071)	Loss/tok 8.2783 (8.4369)
2: VALIDATION [0][20/40]	Time 0.026 (0.033)	Data 7.04e-04 (7.43e-04)	Tok/s 61005 (72195)	Loss/tok 8.3910 (8.3942)
1: VALIDATION [0][20/40]	Time 0.024 (0.033)	Data 7.69e-04 (7.69e-04)	Tok/s 67674 (72524)	Loss/tok 8.1951 (8.4166)
0: VALIDATION [0][20/40]	Time 0.024 (0.034)	Data 7.15e-04 (7.54e-04)	Tok/s 67947 (72747)	Loss/tok 8.3308 (8.4142)
3: VALIDATION [0][30/40]	Time 0.017 (0.029)	Data 7.10e-04 (7.39e-04)	Tok/s 61849 (68671)	Loss/tok 8.2492 (8.3943)
2: VALIDATION [0][30/40]	Time 0.016 (0.029)	Data 6.93e-04 (7.36e-04)	Tok/s 64574 (69167)	Loss/tok 8.0838 (8.3711)
1: VALIDATION [0][30/40]	Time 0.017 (0.029)	Data 7.19e-04 (7.54e-04)	Tok/s 62697 (69298)	Loss/tok 8.2611 (8.3692)
0: VALIDATION [0][30/40]	Time 0.017 (0.030)	Data 7.10e-04 (7.41e-04)	Tok/s 63525 (69607)	Loss/tok 8.3737 (8.3930)
0: Saving model to gnmt/model_best.pth
0: Running evaluation on test set
2: Running evaluation on test set
3: Running evaluation on test set
1: Running evaluation on test set
2: TEST [0][9/24]	Time 0.5843 (0.6349)	Decoder iters 149.0 (149.0)	Tok/s 9864 (9716)
0: TEST [0][9/24]	Time 0.5852 (0.6350)	Decoder iters 149.0 (149.0)	Tok/s 9898 (9858)
1: TEST [0][9/24]	Time 0.5859 (0.6350)	Decoder iters 149.0 (149.0)	Tok/s 9886 (9768)
3: TEST [0][9/24]	Time 0.5848 (0.6351)	Decoder iters 149.0 (149.0)	Tok/s 9849 (9665)
2: TEST [0][19/24]	Time 0.5356 (0.6301)	Decoder iters 149.0 (149.0)	Tok/s 9484 (9452)
0: TEST [0][19/24]	Time 0.5357 (0.6301)	Decoder iters 149.0 (149.0)	Tok/s 9522 (9547)
1: TEST [0][19/24]	Time 0.5372 (0.6301)	Decoder iters 149.0 (149.0)	Tok/s 9071 (9453)
3: TEST [0][19/24]	Time 0.5370 (0.6301)	Decoder iters 149.0 (149.0)	Tok/s 9415 (9416)
0: Running sacrebleu (parameters: --score-only -lc --tokenize intl)
2: Finished evaluation on test set
3: Finished evaluation on test set
0: Finished evaluation on test set
1: Finished evaluation on test set
0: Summary: Epoch: 0	Training Loss: 8.8054	Validation Loss: 8.3455	Test BLEU: 0.00
0: Performance: Epoch: 0	Training: 139797 Tok/s	Validation: 262482 Tok/s
0: Finished epoch 0
3: Finished epoch 0
2: Finished epoch 0
0: Starting epoch 1
3: Starting epoch 1
2: Starting epoch 1
1: Finished epoch 0
1: Starting epoch 1
2: Executing preallocation
3: Executing preallocation
0: Executing preallocation
1: Executing preallocation
1: Sampler for epoch 1 uses seed 2606193617
0: Sampler for epoch 1 uses seed 2606193617
2: Sampler for epoch 1 uses seed 2606193617
3: Sampler for epoch 1 uses seed 2606193617
2: TRAIN [1][0/54]	Time 1.524 (0.000)	Data 1.31e-01 (0.00e+00)	Tok/s 11602 (0)	Loss/tok 7.6842 (7.6842)	LR 7.085e-04
1: TRAIN [1][0/54]	Time 1.556 (0.000)	Data 1.31e-01 (0.00e+00)	Tok/s 11380 (0)	Loss/tok 7.7230 (7.7230)	LR 7.085e-04
0: TRAIN [1][0/54]	Time 1.551 (0.000)	Data 1.46e-01 (0.00e+00)	Tok/s 11286 (0)	Loss/tok 7.7139 (7.7139)	LR 7.085e-04
3: TRAIN [1][0/54]	Time 1.520 (0.000)	Data 1.32e-01 (0.00e+00)	Tok/s 11412 (0)	Loss/tok 7.7132 (7.7132)	LR 7.085e-04
2: TRAIN [1][10/54]	Time 1.127 (1.064)	Data 2.28e-04 (2.82e-04)	Tok/s 35993 (33088)	Loss/tok 7.8696 (7.7662)	LR 1.355e-03
1: TRAIN [1][10/54]	Time 1.128 (1.064)	Data 2.38e-04 (2.38e-04)	Tok/s 36284 (33048)	Loss/tok 7.8850 (7.7692)	LR 1.355e-03
0: TRAIN [1][10/54]	Time 1.127 (1.064)	Data 3.15e-04 (2.63e-04)	Tok/s 36177 (33050)	Loss/tok 7.8773 (7.7649)	LR 1.355e-03
3: TRAIN [1][10/54]	Time 1.128 (1.064)	Data 2.42e-04 (2.61e-04)	Tok/s 36185 (33075)	Loss/tok 7.8747 (7.7519)	LR 1.355e-03
Traceback (most recent call last):
  File "train.py", line 667, in <module>
    main()
  File "train.py", line 592, in main
    train_loss, train_perf = trainer.optimize(train_loader)
  File "/workspace/examples/gnmt/seq2seq/train/trainer.py", line 352, in optimize
    output = self.feed_data(data_loader, training=True)
  File "/workspace/examples/gnmt/seq2seq/train/trainer.py", line 236, in feed_data
    stats = self.iterate(src, tgt, update, training=training)
  File "/workspace/examples/gnmt/seq2seq/train/trainer.py", line 191, in iterate
    self.fp_optimizer.step(loss, self.optimizer, self.scheduler,
  File "/workspace/examples/gnmt/seq2seq/train/fp_optimizers.py", line 181, in step
    loss.backward()
  File "/opt/conda/lib/python3.8/site-packages/torch/tensor.py", line 245, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/opt/conda/lib/python3.8/site-packages/torch/autograd/__init__.py", line 145, in backward
    Variable._execution_engine.run_backward(
RuntimeError: CUDA out of memory. Tried to allocate 3.76 GiB (GPU 2; 44.56 GiB total capacity; 32.13 GiB already allocated; 1.65 GiB free; 41.33 GiB reserved in total by PyTorch)
Traceback (most recent call last):
  File "train.py", line 667, in <module>
    main()
  File "train.py", line 592, in main
    train_loss, train_perf = trainer.optimize(train_loader)
  File "/workspace/examples/gnmt/seq2seq/train/trainer.py", line 352, in optimize
    output = self.feed_data(data_loader, training=True)
  File "/workspace/examples/gnmt/seq2seq/train/trainer.py", line 236, in feed_data
    stats = self.iterate(src, tgt, update, training=training)
  File "/workspace/examples/gnmt/seq2seq/train/trainer.py", line 191, in iterate
    self.fp_optimizer.step(loss, self.optimizer, self.scheduler,
  File "/workspace/examples/gnmt/seq2seq/train/fp_optimizers.py", line 181, in step
    loss.backward()
  File "/opt/conda/lib/python3.8/site-packages/torch/tensor.py", line 245, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/opt/conda/lib/python3.8/site-packages/torch/autograd/__init__.py", line 145, in backward
    Variable._execution_engine.run_backward(
RuntimeError: CUDA out of memory. Tried to allocate 3.76 GiB (GPU 3; 44.56 GiB total capacity; 32.13 GiB already allocated; 1.67 GiB free; 41.33 GiB reserved in total by PyTorch)
Traceback (most recent call last):
  File "train.py", line 667, in <module>
    main()
  File "train.py", line 592, in main
    train_loss, train_perf = trainer.optimize(train_loader)
  File "/workspace/examples/gnmt/seq2seq/train/trainer.py", line 352, in optimize
    output = self.feed_data(data_loader, training=True)
  File "/workspace/examples/gnmt/seq2seq/train/trainer.py", line 236, in feed_data
    stats = self.iterate(src, tgt, update, training=training)
  File "/workspace/examples/gnmt/seq2seq/train/trainer.py", line 191, in iterate
    self.fp_optimizer.step(loss, self.optimizer, self.scheduler,
  File "/workspace/examples/gnmt/seq2seq/train/fp_optimizers.py", line 181, in step
    loss.backward()
  File "/opt/conda/lib/python3.8/site-packages/torch/tensor.py", line 245, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/opt/conda/lib/python3.8/site-packages/torch/autograd/__init__.py", line 145, in backward
    Variable._execution_engine.run_backward(
RuntimeError: CUDA out of memory. Tried to allocate 3.76 GiB (GPU 1; 44.56 GiB total capacity; 32.12 GiB already allocated; 1.67 GiB free; 41.33 GiB reserved in total by PyTorch)
Traceback (most recent call last):
  File "train.py", line 667, in <module>
    main()
  File "train.py", line 592, in main
    train_loss, train_perf = trainer.optimize(train_loader)
  File "/workspace/examples/gnmt/seq2seq/train/trainer.py", line 352, in optimize
    output = self.feed_data(data_loader, training=True)
  File "/workspace/examples/gnmt/seq2seq/train/trainer.py", line 236, in feed_data
    stats = self.iterate(src, tgt, update, training=training)
  File "/workspace/examples/gnmt/seq2seq/train/trainer.py", line 191, in iterate
    self.fp_optimizer.step(loss, self.optimizer, self.scheduler,
  File "/workspace/examples/gnmt/seq2seq/train/fp_optimizers.py", line 181, in step
    loss.backward()
  File "/opt/conda/lib/python3.8/site-packages/torch/tensor.py", line 245, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/opt/conda/lib/python3.8/site-packages/torch/autograd/__init__.py", line 145, in backward
    Variable._execution_engine.run_backward(
RuntimeError: CUDA out of memory. Tried to allocate 3.76 GiB (GPU 0; 44.56 GiB total capacity; 32.15 GiB already allocated; 1.66 GiB free; 41.33 GiB reserved in total by PyTorch)
Traceback (most recent call last):
  File "/opt/conda/lib/python3.8/runpy.py", line 194, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/opt/conda/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/opt/conda/lib/python3.8/site-packages/torch/distributed/launch.py", line 340, in <module>
    main()
  File "/opt/conda/lib/python3.8/site-packages/torch/distributed/launch.py", line 326, in main
    sigkill_handler(signal.SIGTERM, None)  # not coming back
  File "/opt/conda/lib/python3.8/site-packages/torch/distributed/launch.py", line 301, in sigkill_handler
    raise subprocess.CalledProcessError(returncode=last_return_code, cmd=cmd)
subprocess.CalledProcessError: Command '['/opt/conda/bin/python3', '-u', 'train.py', '--local_rank=3', '--dataset-dir', '/data/gnmt/wmt16_de_en', '--train-batch-size', '648', '--val-batch-size', '32', '--test-batch-size', '32', '--math', 'fp32', '--epochs', '2', '--seed', '2']' returned non-zero exit status 1.
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
Killing subprocess 21598
Killing subprocess 21599
Killing subprocess 21600
Killing subprocess 21601
DONE!
