DLL 2024-10-30 18:27:53.509578 - PARAMETER data : /data/ncf/cache/ml-20m  feature_spec_file : feature_spec.yaml  epochs : 2  batch_size : 8000000  valid_batch_size : 1048576  factors : 64  layers : [256, 256, 128, 64]  negative_samples : 4  learning_rate : 0.0045  topk : 10  seed : None  threshold : 1.0  beta1 : 0.25  beta2 : 0.5  eps : 1e-08  dropout : 0.5  checkpoint_dir :   load_checkpoint_path : None  mode : train  grads_accumulated : 1  amp : False  log_path : log.json  world_size : 1  distributed : False  local_rank : 0 
/workspace/benchmark/Recommendation/NCF/dataloading.py:56: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  chunk_data = torch.load(path_to_load, map_location=torch.device('cuda:{}'.format(self.local_rank)))
NeuMF(
  (mf_user_embed): Embedding(138493, 64)
  (mf_item_embed): Embedding(26744, 64)
  (mlp_user_embed): Embedding(138493, 128)
  (mlp_item_embed): Embedding(26744, 128)
  (mlp): ModuleList(
    (0): Linear(in_features=256, out_features=256, bias=True)
    (1): Linear(in_features=256, out_features=128, bias=True)
    (2): Linear(in_features=128, out_features=64, bias=True)
  )
  (final): Linear(in_features=128, out_features=1, bias=True)
)
31832577 parameters
DLL 2024-10-30 18:28:02.295232 - (0,) train_throughput : 1.548e+07 samples/s hr@10 : 0.83302 None train_epoch_time : 6.415 s validation_epoch_time : 0.556 s eval_throughput : 2.515e+07 samples/s validation_loss : 0.14431 None train_loss : 0.24851 None
New best hr!
DLL 2024-10-30 18:28:04.000575 - (1,) train_throughput : 8.610e+07 samples/s hr@10 : 0.83689 None train_epoch_time : 1.153 s validation_epoch_time : 0.552 s eval_throughput : 2.535e+07 samples/s validation_loss : 0.14438 None train_loss : 0.22020 None
New best hr!
DLL 2024-10-30 18:28:04.000857 - () best_train_throughput : 86099685.10164368 samples/s best_eval_throughput : 25351568.491417836 samples/s mean_train_throughput : 50790286.15433922 samples/s mean_eval_throughput : 25250981.821396448 samples/s best_accuracy : 0.8368870628840447 None best_epoch : 1 None time_to_target : 10.08952283859253 s time_to_best_model : 10.089405298233032 s validation_loss : 0.14438 None train_loss : 0.22020 None
DONE!
